apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: {{ include "minimal-app.fullname" . }}
  labels:
    {{- include "minimal-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "minimal-app.selectorLabels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "minimal-app.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/minimal-app-configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: minimal-app
        ports:
        - name: "http"
          containerPort: 8000
          protocol: "TCP"
        envFrom:
        - configMapRef:
            name: {{ include "minimal-app.fullname" . }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        readinessProbe:
          httpGet:
            path: /.well-known/check
            port: 8000
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
status: {}
